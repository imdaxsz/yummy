name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: create env
        run:
          touch .env
          echo "ALGOLIA_APP_KEY=${{ secrets.ALGOLIA_APP_KEY }}" >> .env
          echo "ALGOLIA_SEARCH_KEY=${{ secrets.ALGOLIA_SEARCH_KEY }}" >> .env
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_MESSAGING_ID=${{ secrets.FIREBASE_MESSAGING_ID }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
        env:
          ALGOLIA_APP_KEY: '${{ secrets.ALGOLIA_APP_KEY }}'
          ALGOLIA_SEARCH_KEY: '${{ secrets.ALGOLIA_SEARCH_KEY }}'
          FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'
          FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
          FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'
          FIREBASE_MESSAGING_ID: '${{ secrets.FIREBASE_MESSAGING_ID }}'
          FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'
          FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'
      - name: build application
        run: npm ci && npm run build
      - name: deploy application
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_YUMMY_B566A }}
          channelId: live
          projectId: yummy-b566a
